// Generated by CoffeeScript 1.6.3
var Alien, AlienManager, SHIP_POSY, Ship, ShipShot, WIDTH, alienCallback, alienId, alienSteps, alienStepsDown, aliens, aliensDelta, am, ship, shipCallback, shipShot, shipShotCallback;

WIDTH = 800;

SHIP_POSY = 540;

ShipShot = (function() {
  ShipShot.prototype.width = 2;

  ShipShot.prototype.height = 20;

  ShipShot.prototype.elem = function() {
    return $('#ship-shot');
  };

  function ShipShot(posx) {
    this.posx = posx;
    this.posy = SHIP_POSY;
    $.playground().addSprite('ship-shot', {
      posx: this.posx,
      posy: this.posy,
      width: this.width,
      height: this.height,
      animation: new $.gQ.Animation({
        imageURL: "images/ship-shot.jpg"
      })
    });
  }

  ShipShot.prototype.updatePos = function() {
    if (this.posy > 0) {
      this.posy -= 10;
      this.elem().y(this.posy);
      return this;
    } else {
      return this.destroy();
    }
  };

  ShipShot.prototype.destroy = function() {
    this.elem().remove();
    return null;
  };

  ShipShot.prototype.rect = function() {
    return {
      top: this.posy,
      left: this.posx,
      bottom: this.posy + this.height,
      right: this.posx + this.width
    };
  };

  return ShipShot;

})();

Ship = (function() {
  function Ship(args) {}

  Ship.prototype.posx = 0;

  Ship.prototype.width = 63;

  Ship.prototype.elem = function() {
    return $('#ship');
  };

  Ship.prototype.animation = function() {
    return new $.gQ.Animation({
      imageURL: "images/space-invaders-ship1.jpg"
    });
  };

  Ship.prototype.spriteData = function() {
    return {
      posx: this.posx,
      posy: SHIP_POSY,
      height: 40,
      width: this.width,
      animation: this.animation()
    };
  };

  Ship.prototype.moveRight = function() {
    if (this.posx < WIDTH) {
      this.posx += 5;
    }
    return this.updatePos();
  };

  Ship.prototype.moveLeft = function() {
    if (this.posx > 0) {
      this.posx -= 5;
    }
    return this.updatePos();
  };

  Ship.prototype.updatePos = function() {
    return this.elem().x(this.posx);
  };

  Ship.prototype.fire = function() {
    return new ShipShot(this.posx + this.width / 2);
  };

  return Ship;

})();

alienId = 0;

Alien = (function() {
  Alien.prototype.width = 40;

  Alien.prototype.height = 30;

  function Alien(posx, posy, type) {
    this.posx = posx;
    this.posy = posy;
    this.type = type;
    this.id = (alienId += 1);
    $.playground().addSprite("alien-" + this.id, {
      posx: this.posx,
      posy: this.posy,
      width: this.width,
      height: this.height,
      animation: new $.gQ.Animation({
        imageURL: "images/invader" + this.type + ".jpg"
      })
    });
  }

  Alien.prototype.elem = function() {
    return $("#alien-" + this.id);
  };

  Alien.prototype.moveHoriz = function(deltax) {
    this.posx += deltax;
    return this.updatePos();
  };

  Alien.prototype.moveVert = function(deltay) {
    this.posy += deltay;
    return this.updatePos();
  };

  Alien.prototype.updatePos = function() {
    return this.elem().x(this.posx).y(this.posy);
  };

  Alien.prototype.collidesWith = function(rect) {
    return this.posy <= rect.bottom && this.posy + this.height >= rect.top && this.posx <= rect.right && this.posx + this.width <= rect.left;
  };

  Alien.prototype.destroy = function() {
    return this.elem().remove();
  };

  return Alien;

})();

aliens = [];

AlienManager = (function() {
  function AlienManager() {}

  AlienManager.prototype.type = 0;

  AlienManager.prototype.generujRzadekAlienow = function(num) {
    var x, _i, _results;
    this.type += 1;
    _results = [];
    for (x = _i = 0; _i <= 9; x = ++_i) {
      _results.push(aliens.push(new Alien(20 + x * 60, 20 + num * 40, this.type % 3)));
    }
    return _results;
  };

  AlienManager.prototype.destroy = function(a) {
    return a.destroy();
  };

  return AlienManager;

})();

am = new AlienManager;

ship = new Ship;

shipShot = null;

shipCallback = function() {
  if ($.gameQuery.keyTracker[37]) {
    ship.moveLeft();
  }
  if ($.gameQuery.keyTracker[39]) {
    ship.moveRight();
  }
  if ($.gameQuery.keyTracker[32]) {
    if (!shipShot) {
      return shipShot = ship.fire();
    }
  }
};

shipShotCallback = function() {
  var alien, _i, _len, _results;
  if (shipShot) {
    shipShot = shipShot.updatePos();
    _results = [];
    for (_i = 0, _len = aliens.length; _i < _len; _i++) {
      alien = aliens[_i];
      if (alien.collidesWith(shipShot.rect())) {
        am.destroy(alien);
        _results.push(shipShot = shipShot.destroy());
      } else {
        _results.push(void 0);
      }
    }
    return _results;
  }
};

aliensDelta = 5;

alienSteps = 0;

alienStepsDown = 0;

alienCallback = function() {
  var alien, _i, _j, _len, _len1;
  for (_i = 0, _len = aliens.length; _i < _len; _i++) {
    alien = aliens[_i];
    alien.moveHoriz(aliensDelta);
  }
  alienSteps += 1;
  if (alienSteps >= 30) {
    alienSteps = 0;
    aliensDelta = -aliensDelta;
    for (_j = 0, _len1 = aliens.length; _j < _len1; _j++) {
      alien = aliens[_j];
      alien.moveVert(10);
    }
    alienStepsDown += 1;
    if (alienStepsDown > 3) {
      alienStepsDown = 0;
      am.generujRzadekAlienow(0);
    }
  }
  return null;
};

$(function() {
  $("#startbutton").click(function() {
    return $.playground().startGame(function() {
      return $("#welcomeScreen").remove();
    });
  });
  $('#playground').playground({
    height: 600,
    width: WIDTH,
    keyTracker: true
  });
  $.playground().addSprite('ship', ship.spriteData());
  am.generujRzadekAlienow(2);
  am.generujRzadekAlienow(1);
  am.generujRzadekAlienow(0);
  $.playground().registerCallback(shipCallback, 15);
  $.playground().registerCallback(shipShotCallback, 10);
  return $.playground().registerCallback(alienCallback, 150);
});
